// Mocks generated by Mockito 5.4.0 from annotations
// in reqresapp/test/repository/user_repository_local_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:reqresapp/model/user_model.dart' as _i2;
import 'package:reqresapp/service/user_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserResponse_0 extends _i1.SmartFake implements _i2.UserResponse {
  _FakeUserResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_1 extends _i1.SmartFake implements _i2.User {
  _FakeUser_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i3.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserResponse> fetchUsers(
    int? page,
    int? perPage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUsers,
          [
            page,
            perPage,
          ],
        ),
        returnValue: _i4.Future<_i2.UserResponse>.value(_FakeUserResponse_0(
          this,
          Invocation.method(
            #fetchUsers,
            [
              page,
              perPage,
            ],
          ),
        )),
      ) as _i4.Future<_i2.UserResponse>);
  @override
  _i4.Future<_i2.User> addUser(_i2.User? user) => (super.noSuchMethod(
        Invocation.method(
          #addUser,
          [user],
        ),
        returnValue: _i4.Future<_i2.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #addUser,
            [user],
          ),
        )),
      ) as _i4.Future<_i2.User>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);
  @override
  set id(int? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set email(String? _email) => super.noSuchMethod(
        Invocation.setter(
          #email,
          _email,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set firstName(String? _firstName) => super.noSuchMethod(
        Invocation.setter(
          #firstName,
          _firstName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set lastName(String? _lastName) => super.noSuchMethod(
        Invocation.setter(
          #lastName,
          _lastName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set avatar(String? _avatar) => super.noSuchMethod(
        Invocation.setter(
          #avatar,
          _avatar,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [UserResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserResponse extends _i1.Mock implements _i2.UserResponse {
  MockUserResponse() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get page => (super.noSuchMethod(
        Invocation.getter(#page),
        returnValue: 0,
      ) as int);
  @override
  set page(int? _page) => super.noSuchMethod(
        Invocation.setter(
          #page,
          _page,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get perPage => (super.noSuchMethod(
        Invocation.getter(#perPage),
        returnValue: 0,
      ) as int);
  @override
  set perPage(int? _perPage) => super.noSuchMethod(
        Invocation.setter(
          #perPage,
          _perPage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get total => (super.noSuchMethod(
        Invocation.getter(#total),
        returnValue: 0,
      ) as int);
  @override
  set total(int? _total) => super.noSuchMethod(
        Invocation.setter(
          #total,
          _total,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get totalPages => (super.noSuchMethod(
        Invocation.getter(#totalPages),
        returnValue: 0,
      ) as int);
  @override
  set totalPages(int? _totalPages) => super.noSuchMethod(
        Invocation.setter(
          #totalPages,
          _totalPages,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i2.User> get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: <_i2.User>[],
      ) as List<_i2.User>);
  @override
  set data(List<_i2.User>? _data) => super.noSuchMethod(
        Invocation.setter(
          #data,
          _data,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
